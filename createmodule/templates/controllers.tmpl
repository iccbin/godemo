package controllers

import (
	"net/http"
	"strconv"

	"github.com/gin-gonic/gin"

)

type [[.PluralizeTitle]]Controller struct {
	ApplicationController
}

func (ctrl [[.PluralizeTitle]]Controller) Index(c *gin.Context) {
	var [[.PluralizeName]] []models.[[.ModelName]]
	ctrl.DB.Model(&models.[[.ModelName]]{}).Find(&[[.PluralizeName]])

	c.HTML(http.StatusOK, "index.html", gin.H{
		"title": "index",
		"[[.PluralizeName]]": [[.PluralizeName]],
	})
}

func (ctrl [[.PluralizeTitle]]Controller) New(c *gin.Context) {
	c.HTML(http.StatusOK, "new.html", gin.H{
		"title": "new",
	})
}

func (ctrl [[.PluralizeTitle]]Controller) Create(c *gin.Context) {
	[[.UnderscoreName]] := models.[[.ModelName]]{[[range $key,$value := .FieldMap]][[if ne $key "ID"]]
	            [[$key]]:  c.PostForm("[[$value]]"),[[end]][[end]]
	        }
	ctrl.DB.NewRecord([[.UnderscoreName]])
	ctrl.DB.Create(&[[.UnderscoreName]])

	c.Redirect(http.StatusMovedPermanently, "/")
}

func (ctrl [[.PluralizeTitle]]Controller) Delete(c *gin.Context) {
	[[.UnderscoreName]]Id, _ := strconv.Atoi(c.Param("id"))
	[[.UnderscoreName]] := models.[[.ModelName]]{ID: uint([[.UnderscoreName]]Id)}

	err := ctrl.DB.Delete(&[[.UnderscoreName]]).Error
	if err != nil {
		c.String(http.StatusOK, err.Error())
	} else {
		c.String(http.StatusOK, "ok")
	}
}

func (ctrl [[.PluralizeTitle]]Controller) Edit(c *gin.Context) {
	[[.UnderscoreName]]Id, _ := strconv.Atoi(c.Param("id"))
	[[.UnderscoreName]] := models.[[.ModelName]]{ID: uint([[.UnderscoreName]]Id)}

	err := ctrl.DB.First(&[[.UnderscoreName]]).Error
	if err != nil {
		c.String(http.StatusOK, err.Error())
	} else {
		c.HTML(http.StatusOK, "edit.html", gin.H{
			"title": "edit",
			"[[.UnderscoreName]]":  [[.UnderscoreName]],
		})
	}
}

func (ctrl [[.PluralizeTitle]]Controller) Update(c *gin.Context) {
	[[.UnderscoreName]]Id, _ := strconv.Atoi(c.Param("id"))
	id := uint([[.UnderscoreName]]Id)[[range $key,$value := .FieldMap]] [[if ne $key "ID"]]
	[[$value]] := c.PostForm("[[$value]]")[[end]][[end]]
	[[.UnderscoreName]] := models.[[.ModelName]]{[[range $key,$value := .FieldMap]]
                [[$key]]:  c.PostForm("[[$value]]"),[[end]]
            }
	err := ctrl.DB.Save(&[[.UnderscoreName]]).Error
	if err != nil {
		c.String(http.StatusOK, err.Error())
	} else {
		c.String(http.StatusOK, "ok")
	}

}

func (ctrl [[.PluralizeTitle]]Controller) Show(c *gin.Context)  {
	var [[.PluralizeName]] []models.[[.ModelName]]
	ctrl.DB.Where("id > ?", c.Param("key")).Find(&[[.PluralizeName]])

	c.HTML(http.StatusOK,"show.html",gin.H{
		"title":"hello",
		"[[.PluralizeName]]":[[.PluralizeName]],
	})

}